FROM alpine:3.15.4@sha256:4edbd2beb5f78b1014028f4fbb99f3237d9561100b6881aabbf5acce2c4f9454

WORKDIR /ansible

ARG BUILD_VERSION

#ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1

# requirements.txt now generated from Pipfile
# pipenv lock -r > requirements.txt
COPY requirements.txt .

# workaround needed to prevent conflicts for six and packaging
RUN \
  apk update && \
  build_pkgs="cargo build-base libffi-dev openssl-dev python3-dev py3-pip" && \
  runtime_pkgs="ca-certificates openssl openssh-client python3" && \
  apk --no-cache add --virtual build-dependencies ${build_pkgs} && \
  apk --no-cache add ${runtime_pkgs} && \
  ln -s /usr/bin/python3 /usr/bin/python && \
  python3 -m pip install --no-cache-dir --upgrade pip && \
  pip3 install --no-cache-dir --upgrade wheel && \
  pip3 install --no-cache-dir --upgrade cryptography cffi certifi && \
  pip3 install --no-cache-dir ansible==${BUILD_VERSION} && \
  pip3 install --no-cache-dir ansible-lint && \
  pip3 install --no-cache-dir --upgrade pywinrm && \
  apk del build-dependencies && \
  rm -rf /var/cache/apk/* && \
  rm -rf /root/.cache/pip && \
	find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf && \
	find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf && \
  rm -rf /root/.cargo

LABEL org.opencontainers.image.authors="Jauder Ho <jauderho@users.noreply.github.com>"
LABEL org.opencontainers.image.url="https://github.com/jauderho/dockerfiles"
LABEL org.opencontainers.image.documentation="https://github.com/jauderho/dockerfiles"
LABEL org.opencontainers.image.source="https://github.com/jauderho/dockerfiles"
LABEL org.opencontainers.image.title="jauderho/ansible"
LABEL org.opencontainers.image.description="Ansible is a radically simple IT automation platform"

RUN mkdir -p /etc/ansible && \
  echo 'localhost' > /etc/ansible/hosts

CMD [ "ansible-playbook", "--version" ]

# scratch space
#	pip3 install --no-cache-dir six packaging --ignore-installed && \
# pip3 install --no-cache-dir --upgrade pywinrm[credssp,kerberos] && \
#  apk update && \
#  build_pkgs="cargo build-base libffi-dev openssl-dev python3-dev py3-pip" && \
#  runtime_pkgs="ca-certificates sshpass git openssh-client" && \
#  pip3 install --no-cache-dir ansible==${BUILD_VERSION} && \
#  build_pkgs="cargo build-base libffi-dev openssl-dev python3-dev py3-pip musl-dev gcc libressl-dev" && \
#  runtime_pkgs="ca-certificates sshpass git openssh-client sudo python3 openssl" && \
#  pip3 install --no-cache-dir ansible-core==2.11.5 && \

