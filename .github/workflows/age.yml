name: age

on:
  push:
    branches: 
      - main
    paths:
      - age/*
      - .github/workflows/age.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "v1.0.0"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }} 

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@bdb12b622a910dfdc99a31fdfe6f45a16bc287a4 # v1
        with:
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: >
            95s5acprodeus1file6.blob.core.windows.net:443
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            codeload.github.com:443
            dl-cdn.alpinelinux.org:443
            ghcr.io:443
            github.com:443
            index.docker.io:443
            oauth2.sigstore.dev:443
            objects.githubusercontent.com:443
            pipelines.actions.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            rekor.sigstore.dev:443
            storage.googleapis.com:443
            toolbox-data.anchore.io:443
            v1.fulcio.sigstore.dev:443

      - name: Source checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681 # v3
        with:
          images: ${{ env.REPOSITORY }}
          tags: |
            type=sha,format=long,prefix=sha256:
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push
        id: push-step
        uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          #platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6,linux/s390x
          #platforms: linux/amd64,linux/arm64
          #platforms: linux/amd64
          #platforms: ${{ matrix.arch }}
          build-args: |
            BUILD_VERSION
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}, mode=max
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            docker.io/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:latest

      # The following is for testing container signing and generating SBOMs
      # Workaround for buildx bug: https://github.com/docker/build-push-action/issues/461
      #
      # Links
      # https://githubhelp.com/chrisns/cosign-keyless-demo
      # https://blog.chainguard.dev/zero-friction-keyless-signing-with-github-actions/
      # https://github.com/mattmoor/zero-friction-actions/blob/main/.github/workflows/docker-publish.yml
      # https://github.com/docker/roadmap/issues/269
      # https://github.com/anchore/syft
      
      - name: Install cosign
        uses: sigstore/cosign-installer@581838fbedd492d2350a9ecd427a95d6de1e5d01 # v1.4.1
      
      - name: Install syft
        uses: anchore/sbom-action/download-syft@ce4a7cf05d7b684693d7b6bba97bfbee56806edb # v0.6.0
      
      - name: Sign the image digest and generate SBOM
        run: |
          cosign sign docker.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign sign ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          syft docker.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }} -o json > docker_sbom.json
          syft ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }} -o json > ghcr_sbom.json
          cosign attest --predicate docker_sbom.json docker.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign attest --predicate ghcr_sbom.json ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1
         
      - name: Verify the image digest and SBOM
        run: |
          cosign verify docker.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign verify ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign verify-attestation docker.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
          cosign verify-attestation ghcr.io/${{ env.REPOSITORY }}@${{ steps.push-step.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1
          
