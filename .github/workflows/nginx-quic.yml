name: nginx-quic

on:
  push:
    branches: 
      - main
    paths:
      - nginx-quic/*
      - .github/workflows/nginx-quic.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "git"
  OPENSSL_VERSION: "3.1.1"
  PCRE_VERSION: "10.42"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }} 

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: read-all

jobs:
  deploy-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        quic: [boringssl,quictls]
    runs-on: ubuntu-22.04
    permissions:
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v1
        with:
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: >
            api.github.com:443
            archive.ubuntu.com:80
            auth.docker.io:443
            boringssl.googlesource.com:443
            ghcr.io:443
            github.com:443
            pkg-containers.githubusercontent.com:443
            hg.nginx.org:443
            ports.ubuntu.com:80
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
            security.ubuntu.com:80
          
      - name: Source checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}     

      - name: Build and push (${{ matrix.quic }})
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile.ubuntu.${{ matrix.quic }}
          #platforms: linux/amd64,linux/arm64,linux/ppc64le
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          #platforms: linux/amd64
          build-args: BUILD_VERSION
          cache-from: type=gha, scope=${{ github.workflow }}-ubuntu-${{ matrix.quic }}
          cache-to: type=gha, scope=${{ github.workflow }}-ubuntu-${{ matrix.quic }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-ubuntu-${{ matrix.quic }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-ubuntu-${{ matrix.quic }}

  deploy-alpine:
    strategy:
      fail-fast: false
      matrix:
        quic: [boringssl,quictls]
    runs-on: ubuntu-22.04
    permissions:
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v1
        with:
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            boringssl.googlesource.com:443
            dl-cdn.alpinelinux.org:443
            ghcr.io:443
            github.com:443
            pkg-containers.githubusercontent.com:443
            hg.nginx.org:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
          
      - name: Source checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}     

      - name: Build and push (${{ matrix.quic }})
        if: ${{ matrix.quic != 'boringssl' }}
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile.alpine.${{ matrix.quic }}
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          #platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          #platforms: linux/amd64
          build-args: |
            BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}-alpine-${{ matrix.quic }}
          cache-to: type=gha, scope=${{ github.workflow }}-alpine-${{ matrix.quic }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine-${{ matrix.quic }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine-${{ matrix.quic }}

      - name: Build and push (latest)
        if: ${{ matrix.quic == 'boringssl' }}
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile.alpine.${{ matrix.quic }}
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          #platforms: linux/amd64
          build-args: |
            BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}-alpine-${{ matrix.quic }}
          cache-to: type=gha, scope=${{ github.workflow }}-alpine-${{ matrix.quic }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine-${{ matrix.quic }}
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine-${{ matrix.quic }}
            docker.io/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine-${{ matrix.quic }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine-${{ matrix.quic }}
            ghcr.io/${{ env.REPOSITORY }}:latest
