#
# Run a daily scan of Docker images using Trivy, Snyk and Anchore
#
name: Scan
on:
  push:
    paths:
      - .github/workflows/scan.yml
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * *"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: read-all

jobs:
  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        #image: [cloudflared]
        image: [age, ali, amass, ansible, aznamingtool, bl3auto, black, catprinter, cf-warp, cloudflared, coredns, ddosify, dhcp-helper, dive, dkimpy, dnscontrol, dnscrypt-proxy, dnsx, docker-autocompose, docker-bench-security, driftctl, dry, dsq, excalidraw, fq, gobgp, gocannon, goplay2, goreplay, gotip, gron, hakrawler, headscale, httpie-go, httprobe, httpx, imapsync, lego, log4j-scan, logmepwn, lpar2rrd, miller, nebula, netmaker, nginx, nginx-quic, ntfy, octosql, onetun, prettier, pwru, rclone, rdap, rustybgp, sftpd, spicedb, ssh-audit, sslyze, stor2rrd, subfinder, tailscale, terraform, testssl.sh, textql, tftpd, toxiproxy, trufflehog, unbound, vegeta, visidata, watchtower, whois, wuzz, yggdrasil-go, yt-dlp, zola]
    runs-on: ubuntu-22.04

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit
          
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.4.0

      - name: Run Trivy to check ${{ matrix.image }} Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@1f0aa582c8c8f5f7639610d6d38baddfea4fdcee # master
        with:
          #image-ref: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
          image-ref: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          format: 'sarif'
          output: 'trivy-${{ matrix.image }}.sarif'
          severity: 'HIGH,CRITICAL'
          hide-progress: false

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@7df0ce34898d659f95c0c4a09eaa8d4e32ee64db
        with:
          sarif_file: 'trivy-${{ matrix.image }}.sarif'

  anchore:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results  
    needs: trivy
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        #image: [cloudflared]
        image: [age, ali, amass, ansible, aznamingtool, bl3auto, black, catprinter, cf-warp, cloudflared, coredns, ddosify, dhcp-helper, dive, dkimpy, dnscontrol, dnscrypt-proxy, dnsx, docker-autocompose, docker-bench-security, driftctl, dry, dsq, excalidraw, fq, gobgp, gocannon, goplay2, goreplay, gotip, gron, hakrawler, headscale, httpie-go, httprobe, httpx, imapsync, lego, log4j-scan, logmepwn, lpar2rrd, miller, nebula, netmaker, nginx, nginx-quic, ntfy, octosql, onetun, prettier, pwru, rclone, rdap, rustybgp, sftpd, spicedb, ssh-audit, sslyze, stor2rrd, subfinder, tailscale, terraform, testssl.sh, textql, tftpd, toxiproxy, trufflehog, unbound, vegeta, visidata, watchtower, whois, wuzz, yggdrasil-go, yt-dlp, zola]
    runs-on: ubuntu-22.04
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit
          
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.4.0

      - name: Run Anchore to check ${{ matrix.image }} Docker image for vulnerabilities
        uses: anchore/scan-action@4be3c24559b430723e51858969965e163b196957 # v3.3.5
        id: anchore-scan
        with:
          #image: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
          image: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          fail-build: false
          severity-cutoff: high

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@7df0ce34898d659f95c0c4a09eaa8d4e32ee64db
        with:
          sarif_file: ${{ steps.anchore-scan.outputs.sarif }}

  # snyk:
  #   permissions:
  #     contents: read # for actions/checkout to fetch code
  #     security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  #   needs: anchore
  #   strategy:
  #     max-parallel: 10
  #     fail-fast: false
  #     matrix:
  #       #image: [cloudflared]
  #       image: [age, ali, amass, ansible, aznamingtool, bl3auto, black, catprinter, cf-warp, cloudflared, coredns, ddosify, dhcp-helper, dive, dkimpy, dnscontrol, dnscrypt-proxy, dnsx, docker-autocompose, docker-bench-security, driftctl, dry, dsq, excalidraw, fq, gobgp, gocannon, goplay2, goreplay, gotip, gron, hakrawler, headscale, httpie-go, httprobe, httpx, imapsync, lego, log4j-scan, logmepwn, lpar2rrd, miller, nebula, netmaker, nginx, nginx-quic, ntfy, octosql, onetun, prettier, pwru, rclone, rdap, rustybgp, sftpd, spicedb, ssh-audit, sslyze, stor2rrd, subfinder, tailscale, terraform, testssl.sh, textql, tftpd, toxiproxy, trufflehog, unbound, vegeta, visidata, watchtower, whois, wuzz, yggdrasil-go, yt-dlp, zola]
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
  #       with:
  #         egress-policy: audit
          
  #     - name: Checkout code
  #       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.4.0

  #     - name: Run Snyk to check ${{ matrix.image }} Docker image for vulnerabilities
  #       # Snyk can be used to break the build when it detects vulnerabilities.
  #       # In this case we want to upload the issues to GitHub Code Scanning
  #       continue-on-error: true
  #       uses: snyk/actions/docker@7fad562681122205233d1242c3bb39598c5393da # master
  #       env:
  #         # In order to use the Snyk Action you will need to have a Snyk API token.
  #         # More details in https://github.com/snyk/actions#getting-your-snyk-token
  #         # or you can signup for free at https://snyk.io/login
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         #image: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
  #         image: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
  #         args: --file=${{ matrix.image }}/Dockerfile --severity-threshold=high

  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@7df0ce34898d659f95c0c4a09eaa8d4e32ee64db
  #       with:
  #         sarif_file: snyk.sarif

