#
# Run a daily scan of Docker images using Trivy, Snyk and Anchore
#
name: Scan
on:
  push:
    paths:
      - .github/workflows/scan.yml
      - scripts/PROGRAMS
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * *"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: read-all

jobs:
  prepare:
    runs-on: ubuntu-24.04
    outputs:
      programs: ${{ steps.set-programs.outputs.programs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Read list of programs from file
        id: set-programs
        run: echo "programs=$(cat scripts/PROGRAMS | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT

  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    needs: prepare
    strategy:
      max-parallel: 25
      fail-fast: false
      matrix:
        image: ${{fromJson(needs.prepare.outputs.programs)}}
    runs-on: ubuntu-24.04

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.10.4
        with:
          egress-policy: audit
          disable-telemetry: false
          
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Run Trivy to check ${{ matrix.image }} Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # master
        with:
          #image-ref: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
          #image-ref: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          image-ref: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          format: 'sarif'
          output: 'trivy-${{ matrix.image }}.sarif'
          severity: 'HIGH,CRITICAL'
          hide-progress: false

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8
        with:
          sarif_file: 'trivy-${{ matrix.image }}.sarif'

  anchore:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results  
    needs: [prepare, trivy]
    strategy:
      max-parallel: 25
      fail-fast: false
      matrix:
        image: ${{fromJson(needs.prepare.outputs.programs)}}
    runs-on: ubuntu-24.04
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.10.4
        with:
          egress-policy: audit
          disable-telemetry: false
          
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Run Anchore to check ${{ matrix.image }} Docker image for vulnerabilities
        uses: anchore/scan-action@df395807f4554463d4455b8047cf58e37b6acaae # v6.5.0
        id: anchore-scan
        with:
          #image: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
          image: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          fail-build: false
          severity-cutoff: high

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8
        with:
          sarif_file: ${{ steps.anchore-scan.outputs.sarif }}

  # snyk:
  #   permissions:
  #     contents: read # for actions/checkout to fetch code
  #     security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  #   needs: anchore
  #   strategy:
  #     max-parallel: 20
  #     fail-fast: false
  #     matrix:
  #      image: ${{fromJson(needs.prepare.outputs.programs)}}
  #   runs-on: ubuntu-24.04

  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.10.4
  #       with:
  #         egress-policy: audit
  #         disable-telemetry: false
          
  #     - name: Checkout code
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.4.2

  #     - name: Run Snyk to check ${{ matrix.image }} Docker image for vulnerabilities
  #       # Snyk can be used to break the build when it detects vulnerabilities.
  #       # In this case we want to upload the issues to GitHub Code Scanning
  #       continue-on-error: true
  #       uses: snyk/actions/docker@7fad562681122205233d1242c3bb39598c5393da # master
  #       env:
  #         # In order to use the Snyk Action you will need to have a Snyk API token.
  #         # More details in https://github.com/snyk/actions#getting-your-snyk-token
  #         # or you can signup for free at https://snyk.io/login
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         #image: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
  #         image: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
  #         args: --file=${{ matrix.image }}/Dockerfile --severity-threshold=high

  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@4e828ff8d448a8a6e532957b1811f387a63867e8
  #       with:
  #         sarif_file: snyk.sarif

