#
# Run a daily scan of Docker images using Trivy, Snyk and Anchore
#
name: Scan
on:
  push:
    paths:
      - .github/workflow/scan.yml
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * *"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: read-all

jobs:
  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    strategy:
      fail-fast: false
      matrix:
        #image: [cloudflared]
        image: [age, ali, amass, ansible, bl3auto, black, catprinter, cf-warp, cloudflared, coredns, ddosify, dhcp-helper, dive, dkimpy, dnscontrol, dnscrypt-proxy, dnsx, docker-autocompose, docker-bench-security, driftctl, dry, dsq, excalidraw, fq, gobgp, gocannon, goplay2, goreplay, gotip, gron, hakrawler, headscale, httpie-go, httprobe, httpx, imapsync, lego, log4j-scan, logmepwn, lpar2rrd, miller, nebula, netmaker, nginx, nginx-quic, ntfy, octosql, onetun, prettier, pwru, rclone, rdap, rustybgp, sftpd, spicedb, ssh-audit, sslyze, stor2rrd, subfinder, tailscale, terraform, testssl.sh, textql, tftpd, toxiproxy, trufflehog, unbound, vegeta, visidata, watchtower, whois, wuzz, yggdrasil-go, yt-dlp, zola]
    runs-on: ubuntu-22.04

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          egress-policy: audit
          
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v2.4.0

      - name: Run Trivy to check ${{ matrix.image }} Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@9ab158e8597f3b310480b9a69402b419bc03dbd5 # master
        with:
          #image-ref: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
          image-ref: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          format: 'sarif'
          output: 'trivy-${{ matrix.image }}.sarif'
          severity: 'HIGH,CRITICAL'
          hide-progress: false

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@515828d97454b8354517688ddc5b48402b723750
        with:
          sarif_file: 'trivy-${{ matrix.image }}.sarif'

  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    needs: trivy
    strategy:
      fail-fast: false
      matrix:
        #image: [cloudflared]
        image: [age, ali, amass, ansible, bl3auto, black, catprinter, cf-warp, cloudflared, coredns, ddosify, dhcp-helper, dive, dkimpy, dnscontrol, dnscrypt-proxy, dnsx, docker-autocompose, docker-bench-security, driftctl, dry, dsq, excalidraw, fq, gobgp, gocannon, goplay2, goreplay, gotip, gron, hakrawler, headscale, httpie-go, httprobe, httpx, imapsync, lego, log4j-scan, logmepwn, lpar2rrd, miller, nebula, netmaker, nginx, nginx-quic, ntfy, octosql, onetun, prettier, pwru, rclone, rdap, rustybgp, sftpd, spicedb, ssh-audit, sslyze, stor2rrd, subfinder, tailscale, terraform, testssl.sh, textql, tftpd, toxiproxy, trufflehog, unbound, vegeta, visidata, watchtower, whois, wuzz, yggdrasil-go, yt-dlp, zola]
    runs-on: ubuntu-22.04

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          egress-policy: audit
          
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v2.4.0

      - name: Run Snyk to check ${{ matrix.image }} Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@7fad562681122205233d1242c3bb39598c5393da # master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          #image: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
          image: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          args: --file=${{ matrix.image }}/Dockerfile --severity-threshold=high

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@515828d97454b8354517688ddc5b48402b723750
        with:
          sarif_file: snyk.sarif

  anchore:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results  
    needs: snyk
    strategy:
      fail-fast: false
      matrix:
        #image: [cloudflared]
        image: [age, ali, amass, ansible, bl3auto, black, catprinter, cf-warp, cloudflared, coredns, ddosify, dhcp-helper, dive, dkimpy, dnscontrol, dnscrypt-proxy, dnsx, docker-autocompose, docker-bench-security, driftctl, dry, dsq, excalidraw, fq, gobgp, gocannon, goplay2, goreplay, gotip, gron, hakrawler, headscale, httpie-go, httprobe, httpx, imapsync, lego, log4j-scan, logmepwn, lpar2rrd, miller, nebula, netmaker, nginx, nginx-quic, ntfy, octosql, onetun, prettier, pwru, rclone, rdap, rustybgp, sftpd, spicedb, ssh-audit, sslyze, stor2rrd, subfinder, tailscale, terraform, testssl.sh, textql, tftpd, toxiproxy, trufflehog, unbound, vegeta, visidata, watchtower, whois, wuzz, yggdrasil-go, yt-dlp, zola]
    runs-on: ubuntu-22.04
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          egress-policy: audit
          
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v2.4.0

      - name: Run Anchore to check ${{ matrix.image }} Docker image for vulnerabilities
        uses: anchore/scan-action@9a22e4caae42db0d4c687ab5431e1c3699d0def1 # v3.3.2
        id: anchore-scan
        with:
          #image: 'docker.io/${{ github.actor }}/${{ matrix.image }}:latest'
          image: 'ghcr.io/${{ github.actor }}/${{ matrix.image }}:latest'
          fail-build: false
          severity-cutoff: high

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@515828d97454b8354517688ddc5b48402b723750
        with:
          sarif_file: ${{ steps.anchore-scan.outputs.sarif }}
