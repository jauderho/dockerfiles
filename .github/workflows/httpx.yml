name: httpx

on:
  push:
    branches: 
      - main
    paths:
      - httpx/*
      - .github/workflows/httpx.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "v1.1.5"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }} 

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-20.04
    permissions:
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@14dc64f30986eaa2ad2dddcec073f5aab18e5a24 # v1
        with:
          egress-policy: block
          allowed-endpoints: 
            95s5acprodeus1file6.blob.core.windows.net:443
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            codeload.github.com:443
            dl-cdn.alpinelinux.org:443
            ghcr.io:443
            github.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
          
      - name: Source checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681 # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@42d299face0c5c43a0487c477f595ac9cf22f1a7 # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@42d299face0c5c43a0487c477f595ac9cf22f1a7 # v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push
        uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          #platforms: linux/amd64,linux/arm64
          #platforms: linux/amd64
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6,linux/s390x
          #platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/s390x
          build-args: |
            BUILD_VERSION
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            docker.io/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:latest
