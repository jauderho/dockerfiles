name: gotip

on:
  push:
    branches: 
      - main
    paths:
      - gotip/*
      - .github/workflows/gotip.yml
  workflow_dispatch:
  schedule:
    - cron: "0 20 * * *"

env:
  BUILD_VERSION: "nightly"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }}
  UPSTREAM_REPO: https://github.com/golang/go.git

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v1
        with:
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: 
            95s5acprodeus1file6.blob.core.windows.net:443
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            dl-cdn.alpinelinux.org:443
            ghcr.io:443
            github.com:443
            pkg-containers.githubusercontent.com:443
            go.googlesource.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
            sum.golang.org:443
            zrdfepirv2dm3prdstr08.blob.core.windows.net:443
            zrdfepirv2bn4prdstr02.blob.core.windows.net:443
          
      - name: Source checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.4.2 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v1
        
      - name: Get commit short hash from remote repo
        id: get-hash
        #run: echo "::set-output name=hash::$(git ls-remote ${{ env.UPSTREAM_REPO }} HEAD | awk '{print $1}' | head -c 8)"
        run: echo "hash=$(git ls-remote ${{ env.UPSTREAM_REPO }} HEAD | awk '{print $1}' | head -c 8)" >> $GITHUB_OUTPUT

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/ppc64le,linux/s390x
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7
          #platforms: linux/amd64
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7,linux/arm/v6,linux/ppc64le,linux/s390x
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7,linux/arm/v6,linux/s390x
          build-args: |
            BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ steps.get-hash.outputs.hash }}
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            docker.io/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.REPOSITORY }}:${{ steps.get-hash.outputs.hash }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:latest
