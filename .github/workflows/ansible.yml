name: ansible

on:
  push:
    branches: 
      - main
    paths:
      - ansible/*
      - .github/workflows/ansible.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "8.0.0"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }} 

permissions: read-all

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        distro: [ubuntu, alpine]
        #distro: [ubuntu]
    runs-on: ubuntu-22.04
    permissions:
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v1
        with:
          disable-sudo: true
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: 
            api.github.com:443
            archive.ubuntu.com:80
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            crates.io:443
            dl-cdn.alpinelinux.org:443
            files.pythonhosted.org:443
            ghcr.io:443
            github.com:443
            index.docker.io:443
            ports.ubuntu.com:80
            production.cloudflare.docker.com:443
            pypi.org:443
            registry-1.docker.io:443
            security.ubuntu.com:80
            static.crates.io:443
            www.piwheels.org:443

      - name: Source checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v1
      
      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push (Ubuntu)
        if: ${{ matrix.distro == 'ubuntu' }}
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7
          platforms: linux/amd64,linux/arm64
          #platforms: linux/amd64,linux/arm64,linux/ppc64le
          build-args: |
            BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}
            docker.io/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}
            ghcr.io/${{ env.REPOSITORY }}:latest

      - name: Build and push (Alpine)
        if: ${{ matrix.distro == 'alpine' }}
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          file: ${{ github.workflow }}/Dockerfile.${{ matrix.distro }}
          #platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7
          platforms: linux/amd64,linux/arm64
          #platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le
          #platforms: linux/amd64,linux/arm64,linux/ppc64le
          build-args: |
            BUILD_VERSION
          sbom: true
          provenance: true
          cache-from: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ matrix.distro }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-${{ matrix.distro }}
