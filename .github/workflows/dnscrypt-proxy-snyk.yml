# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Snyk. The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity
# issues, monitor images for newly disclosed vulnerabilities in Snyk and
# fail PR checks for new vulnerabilities, see https://github.com/snyk/actions/

name: dnscrypt-proxy-snyk
on:
  push:
    branches: 
      - main
    paths:
      - dnscrypt-proxy
      - .github/workflows/dnscrypt-proxy.yml
      - .github/workflows/dnscrypt-proxy-snyk.yml
  workflow_dispatch:

env:
  BUILD_VERSION: "2.1.1"
  DOCKER_CLI_EXPERIMENTAL: enabled
  APP: dnscrypt-proxy
  REPOSITORY: ${{ github.actor }}/dnscrypt-proxy

permissions: read-all

jobs:
  snyk:
    runs-on: ubuntu-20.04
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

    steps:
    - uses: actions/checkout@629c2de402a417ea7690ca6ce3f33229e27606a5 # v2
    - name: Build a Docker image
      run: docker build -t ${{ env.REPOSITORY }} ${{ env.APP }} --build-arg BUILD_VERSION
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: snyk/actions/docker@d1ee3d73c6f24375d0efc597c74570b0cd08a323 # master
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ env.REPOSITORY }}
        args: --file=${{ env.APP }}/Dockerfile
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@2b46439dd5477d8a1659811cdc500d35e601a1cb
      with:
        sarif_file: snyk.sarif
