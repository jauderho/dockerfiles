name: cloudflared

on:
  push:
    branches: 
      - main
    paths:
      - cloudflared/*
      - .github/workflows/cloudflared.yml
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

env:
  BUILD_VERSION: "2022.12.1"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/${{ github.workflow }} 

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v1
        with:
          egress-policy: block
          disable-telemetry: true
          allowed-endpoints: 
            95s5acprodeus1file6.blob.core.windows.net:443
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            codeload.github.com:443
            dl-cdn.alpinelinux.org:443
            ghcr.io:443
            github.com:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            rdfepirv2bl2prdstr03.blob.core.windows.net:443
            registry-1.docker.io:443
            zrdfepirv2blaprdstr01a.blob.core.windows.net:443
            zrdfepirv2bz6prdstr07a.blob.core.windows.net:443
            zrdfepirv2dz5prdstr11a.blob.core.windows.net:443
          
      - name: Source checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v2.4.0 
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v1.2.0
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@05d22bf31770de02e20c67c70365453e00227f61 # v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}

      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v1.12.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      

      - name: Build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # v2.8.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ github.workflow }}
          #platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le,linux/s390x
          build-args: BUILD_VERSION
          cache-from: type=gha, scope=${{ github.workflow }}-alpine
          cache-to: type=gha, scope=${{ github.workflow }}-alpine
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            docker.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine
            docker.io/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}
            ghcr.io/${{ env.REPOSITORY }}:${{ env.BUILD_VERSION }}-alpine
            ghcr.io/${{ env.REPOSITORY }}:latest
